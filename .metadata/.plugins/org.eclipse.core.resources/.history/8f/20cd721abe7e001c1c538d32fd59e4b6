package com.btkAkademi.rentACar.business.concretes;

import java.util.List;

import org.springframework.stereotype.Service;

import com.btkAkademi.rentACar.business.abstracts.PromotionService;
import com.btkAkademi.rentACar.business.constants.Messages;
import com.btkAkademi.rentACar.business.dtos.PromotionListDto;
import com.btkAkademi.rentACar.business.requests.promotionRequests.CreatePromotionRequest;
import com.btkAkademi.rentACar.core.utilities.business.BusinessRules;
import com.btkAkademi.rentACar.core.utilities.mapping.ModelMapperService;
import com.btkAkademi.rentACar.core.utilities.results.DataResult;
import com.btkAkademi.rentACar.core.utilities.results.ErrorResult;
import com.btkAkademi.rentACar.core.utilities.results.Result;
import com.btkAkademi.rentACar.core.utilities.results.SuccessDataResult;
import com.btkAkademi.rentACar.core.utilities.results.SuccessResult;
import com.btkAkademi.rentACar.dataAccess.abstracts.PromotionDao;
import com.btkAkademi.rentACar.entities.concretes.Promotion;
@Service
public class PromotionManager implements PromotionService{

	private PromotionDao promotionDao;
	private ModelMapperService modelMapperService;
	public PromotionManager(ModelMapperService modelMapperService,PromotionDao promotionDao) {
		super();
		this.modelMapperService = modelMapperService;
		this.promotionDao=promotionDao;
	}
	@Override
	public Result add(CreatePromotionRequest createPromotionRequest) {
		Result result=BusinessRules.run(checkIfHavePromotionCode(createPromotionRequest.getPromotionCode()));
		if(result!=null) {
			return result;
		}
		Promotion promotion=modelMapperService.forRequest().map(createPromotionRequest, Promotion.class);
		this.promotionDao.save(promotion);
		return new SuccessResult("success");
		
		
	}
	private Result checkIfHavePromotionCode(String code) {
		Promotion promotion=this.promotionDao.findByPromotionCode(code);
		if(promotion!=null) {
			return new ErrorResult(Messages.promotionExists);
		}
		
		return new SuccessResult();
				
	}
	@Override
	public DataResult<List<PromotionListDto>> getAll() {
		// TODO Auto-generated method stub
		return null;
	}
	@Override
	public DataResult<PromotionListDto> getById(int id) {
		Promotion promotion=this.promotionDao.findPromotionById(id);
		PromotionListDto response=modelMapperService.forDto().map(promotion, PromotionListDto.class);
		return new SuccessDataResult<PromotionListDto>(response);
	}
	@Override
	public DataResult<PromotionListDto> getByPromotionCode(String code) {
		Promotion promotion=this.promotionDao.(id);
		PromotionListDto response=modelMapperService.forDto().map(promotion, PromotionListDto.class);
		return new SuccessDataResult<PromotionListDto>(response);
	}

}
